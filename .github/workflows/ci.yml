name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run tests with pytest
      run: |
        pytest --cov=.  # Run pytest with coverage report

    # Steps for MySQL setup using Docker
    - name: Set up MySQL using Docker
      run: |
        docker pull mysql:8.0 # Pull MySQL version 8.0
        docker run --name mysql-container -e MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} -e MYSQL_DATABASE=my_database -d -p 3306:3306 mysql:8.0

    - name: Wait for MySQL to be ready
      run: |
        sleep 20  # Wait for MySQL to initialize

    - name: Copy the SQL file into the Docker container
      run: |
        # Use the full path for the SQL file, assuming the working directory is /home/runner/work/{repo_name}/{repo_name}/
        docker cp ${{ github.workspace }}/complex_query.sql mysql-container:/complex_query.sql

    - name: Verify MySQL connection and run SQL query
      run: |
        # Verify MySQL connection and run the SQL query
        docker exec mysql-container mysql -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} -e "SHOW DATABASES;"
        docker exec mysql-container mysql -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} my_database < /complex_query.sql
